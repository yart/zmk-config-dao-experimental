/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "../zmk-nodefree-config/helper.h"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        kp_2 {
            bindings = <&kp N2>;
            key-positions = <7 20>;
            layers = <0>;
        };

        kp_1 {
            bindings = <&kp N1>;
            key-positions = <6 19>;
            layers = <0>;
        };

        kp_4 {
            bindings = <&kp N4>;
            key-positions = <8 21>;
            layers = <0>;
        };

        kp_3 {
            bindings = <&kp N3>;
            key-positions = <5 18>;
            layers = <0>;
        };

        kp_6 {
            bindings = <&kp N6>;
            key-positions = <9 22>;
            layers = <0>;
        };

        kp_5 {
            bindings = <&kp N5>;
            key-positions = <4 17>;
            layers = <0>;
        };

        kp_8 {
            bindings = <&kp N8>;
            key-positions = <10 23>;
            layers = <0>;
        };

        kp_7 {
            bindings = <&kp N7>;
            key-positions = <3 16>;
            layers = <0>;
        };

        kp_0 {
            bindings = <&kp N0>;
            key-positions = <11 24>;
            layers = <0>;
        };

        kp_9 {
            bindings = <&kp N9>;
            key-positions = <2 15>;
            layers = <0>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &none  &kp LEFT_BRACKET       &kp Q        &kp W        &kp E        &kp R        &kp T                    &kp Y       &kp U        &kp I         &kp O          &kp P  &kp RIGHT_BRACKET   &none
                &kp GRAVE  &hm LGUI A  &hm LSHFT S  &hm LCTRL D   &hm LALT F        &kp G                    &kp H  &hm RALT J  &hm RCTRL K  &hm RSHIFT L  &hm RGUI SEMI           &kp APOS
                 &kp BSLH       &kp Z        &kp X        &kp C        &kp V        &kp B                    &kp N       &kp M    &kp COMMA       &kp DOT       &kp FSLH          &kp MINUS
                                                        &kp TAB  &lt 2 ENTER  &lt 1 SPACE          &lt 1 BACKSPACE   &lt 2 ESC      &kp DEL
            >;
        };

        raise {
            bindings = <
 &trans      &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans  &trans
         &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &trans  &trans  &trans  &trans  &trans
             &trans        &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                       &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        lower {
            bindings = <
 &trans  &trans  &kp EXCL  &kp AT                        &kp HASH                          &kp DLLR                         &kp PRCNT          &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans  &trans
         &trans    &trans  &trans                          &trans                            &trans                            &trans          &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
         &trans    &trans  &trans                          &trans                            &trans                            &trans          &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                   &rgb_ug RGB_COLOR_HSB(0,50,56)  &rgb_ug RGB_COLOR_HSB(104,57,55)  &rgb_ug RGB_COLOR_HSB(209,50,55)             &trans     &trans           &trans
            >;
        };

        Layer__3 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};
